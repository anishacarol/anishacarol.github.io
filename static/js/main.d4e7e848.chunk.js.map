{"version":3,"sources":["helpers/getUrl.js","components/Layout/Layout.styled.js","components/Layout/index.js","components/ScrollToTop/index.js","components/CharacterDetails/CharacterDetails.styles.js","components/CharacterDetails/index.js","services/api.js","hooks/useFetch.js","components/Episodes/Episodes.styles.js","components/Episodes/index.js","components/UI/Link/index.js","components/CharacterCard/CharacterCard.styles.js","components/CharacterCard/index.js","components/CharacterList/index.js","components/RecommendedCharacters/RecommendedCharacters.styles.js","components/RecommendedCharacters/index.js","routes/CharacterProfile/CharacterProfile.styles.js","routes/CharacterProfile/index.js","helpers/getEpisodeIds.js","components/Pagination/Pagination.styles.js","components/Pagination/index.js","components/Search/Search.styles.js","components/Search/index.js","hooks/useQuery.js","routes/Characters/Characters.styles.js","routes/Characters/index.js","App.js","serviceWorker.js","index.js"],"names":["url","endpoint","opt","qry","Number","isInteger","Array","isArray","Object","keys","length","map","key","join","exports","getCharacterUrl","getEpisodeUrl","Layout","styled","div","Container","Header","header","children","ScrollToTop","pathname","useLocation","useEffect","window","scrollTo","Card","BootstrapCard","OriginItem","ListGroup","Item","LocationItem","CharacterDetails","data","image","name","originName","origin","locationName","location","gender","species","status","Img","variant","src","Body","Title","Badge","pill","className","api","a","axios","get","result","useFetch","useState","setData","error","setError","loading","setLoading","getAPI","fetchData","h2","BootstrapList","Episodes","ids","Spinner","animation","dataToRender","episodesEle","episode","air_date","Link","to","CharacterCard","id","imgUrl","currentPage","state","CharacterList","results","Wrapper","RecommendedCharacters","LinkHolder","CharacterProfile","useParams","episodeIds","split","slice","search","Row","Col","sm","Button","BootstrapButton","React","memo","totalPages","Search","ButtonHolder","searchText","setSearchText","history","useHistory","onChangeSearch","useCallback","e","push","target","value","Form","Control","data-testid","onChange","type","placeholder","onClick","useQuery","URLSearchParams","Paging","Span","span","totalCharacters","Characters","page","info","count","pages","App","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.d4e7e848.chunk.js","sourcesContent":["const getQuery = qry => {\n  if ((typeof qry === 'number' && Number.isInteger(qry)) || Array.isArray(qry)) {\n    return `/${qry}`;\n  }\n\n  if (typeof qry === 'object' && Object.keys(qry).length > 0) {\n    return `/?${Object.keys(qry)\n      .map(key => `${key}=${qry[key]}`)\n      .join('&')}`;\n  }\n};\n\nconst url = (endpoint, opt) => {\n  const query = getQuery(opt) || '';\n  return endpoint + query;\n};\n\nexports.getCharacterUrl = (opt = {}) => url('character', opt);\nexports.getEpisodeUrl = (opt = {}) => url('episode', opt);\n","import styled from 'styled-components';\n\nexport const Layout = styled.div``;\n\nexport const Container = styled.div`\n  width: 90%;\n  margin: 0 auto;\n\n  @media (max-width: 740px) {\n    width: 96%;\n  }\n`;\n\nexport const Header = styled.header`\n  min-height: 100px;\n  background-color: #00a7bb;\n  display: flex;\n  align-items: center;\n  text-align: center;\n\n  h1 {\n    color: #fff;\n  }\n`;\n","import React from 'react';\nimport * as Styled from './Layout.styled';\n\nconst Layout = ({ children }) => {\n  return (\n    <Styled.Layout>\n      <Styled.Header>\n        <Styled.Container>\n          <h1>Rick and Morty</h1>\n        </Styled.Container>\n      </Styled.Header>\n      <Styled.Container>\n        <Styled.Container>{children}</Styled.Container>\n      </Styled.Container>\n    </Styled.Layout>\n  );\n};\n\nexport default Layout;\n","import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nexport default function ScrollToTop() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n","import { Card as BootstrapCard, ListGroup } from 'react-bootstrap';\nimport styled from 'styled-components';\n\nexport const Card = styled(BootstrapCard)`\n  text-align: center;\n`;\n\nexport const OriginItem = styled(ListGroup.Item)`\n  font-size: 1.1rem;\n  margin-top: 20px;\n`;\n\nexport const LocationItem = styled(ListGroup.Item)`\n  font-size: 1.1rem;\n  margin-left: 5px;\n  margin-right: 5px;\n`;\n","import React from 'react';\nimport { Badge, Card, ListGroup } from 'react-bootstrap';\nimport * as Styled from './CharacterDetails.styles';\n\nconst CharacterDetails = ({\n  data: {\n    image,\n    name,\n    origin: { name: originName },\n    location: { name: locationName },\n    gender,\n    species,\n    status\n  }\n}) => {\n  return (\n    <Styled.Card>\n      <Card.Img variant=\"top\" src={image} />\n      <Card.Body>\n        <Card.Title>{name}</Card.Title>\n        <Badge pill variant=\"secondary\">\n          {status}\n        </Badge>\n        <Badge pill variant=\"info\">\n          {species}\n        </Badge>\n        <Badge pill variant=\"success\">\n          {gender}\n        </Badge>\n        <ListGroup className=\"list-group-flush\">\n          <Styled.OriginItem>\n            <b> Origin: </b> {originName}\n          </Styled.OriginItem>\n          <Styled.LocationItem>\n            <b>Location: </b> {locationName}\n          </Styled.LocationItem>\n        </ListGroup>\n      </Card.Body>\n    </Styled.Card>\n  );\n};\n\nexport default CharacterDetails;\n","import axios from 'axios';\n\nexport const baseURL = 'https://rickandmortyapi.com/api';\n\nconst api = async url => {\n  const result = await axios.get(`${baseURL}/${url}`);\n  return result;\n};\n\nexport default api;\n","import { useEffect, useState } from 'react';\nimport getAPI from '../services/api';\n\nconst useFetch = url => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      setData(null);\n      setError(null);\n\n      try {\n        const { data } = await getAPI(url);\n        setData(data);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [url]);\n\n  return { data, error, loading };\n};\n\nexport default useFetch;\n","import { ListGroup as BootstrapList } from 'react-bootstrap';\nimport styled from 'styled-components';\n\nexport const Header = styled.h2`\n  @media (max-width: 740px) {\n    margin-top: 50px;\n    margin-bottom: 20px;\n  }\n`;\n\nexport const ListGroup = styled(BootstrapList)`\n  overflow-y: scroll;\n  max-height: 619px;\n`;\n\nexport const Episodes = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nexport const Title = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n","import React from 'react';\nimport { ListGroup, Spinner } from 'react-bootstrap';\nimport { getEpisodeUrl } from '../../helpers/getUrl';\nimport useFetch from '../../hooks/useFetch';\nimport * as Styled from './Episodes.styles';\n\nconst Episodes = ({ ids }) => {\n  const url = getEpisodeUrl([ids]);\n  const { data, error, loading } = useFetch(url);\n\n  if (error) {\n    return <>Error</>;\n  }\n  if (loading || !data) {\n    return <Spinner animation=\"border\" variant=\"info\" />;\n  }\n\n  let dataToRender = data;\n  if (!Array.isArray(data)) {\n    dataToRender = [data];\n  }\n\n  const episodesEle = dataToRender.map(({ name, episode, air_date }) => (\n    <ListGroup.Item key={episode}>\n      <Styled.Episodes>\n        <Styled.Title>\n          <span>{name}</span>\n          <span>{episode}</span>{' '}\n        </Styled.Title>{' '}\n        <div> {air_date}</div>\n      </Styled.Episodes>\n    </ListGroup.Item>\n  ));\n\n  return (\n    <>\n      <Styled.Header>Episodes</Styled.Header>\n      <Styled.ListGroup>{episodesEle}</Styled.ListGroup>\n    </>\n  );\n};\n\nexport default Episodes;\n","import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n\nconst Link = ({ to, children }) => {\n  return <RouterLink to={to}>{children}</RouterLink>;\n};\n\nexport default Link;\n","import { Card as BootstrapCard } from 'react-bootstrap';\r\nimport styled from 'styled-components';\r\n\r\nexport const Card = styled(BootstrapCard)`\r\n  width: 22rem;\r\n  min-height: 172px;\r\n  margin: 20px 15px;\r\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);\r\n  flex-direction: row;\r\n  align-items: center;\r\n  text-align: left;\r\n  padding: 10px 20px;\r\n\r\n  .card-img-top {\r\n    border-radius: 50%;\r\n    width: 25%;\r\n  }\r\n`;\r\n","import React from 'react';\nimport { Badge, Card } from 'react-bootstrap';\nimport Link from '../UI/Link';\nimport * as Styled from './CharacterCard.styles';\n\nconst CharacterCard = ({\n  id,\n  name,\n  status,\n  species,\n  gender,\n  imgUrl,\n  currentPage\n}) => {\n  return (\n    <>\n      <Styled.Card>\n        <Card.Img variant=\"top\" src={imgUrl} />\n        <Card.Body>\n          <Card.Title>\n            <Link\n              to={{\n                pathname: `/profile/${id}`,\n                state: { currentPage }\n              }}\n            >\n              {name}\n            </Link>\n          </Card.Title>\n          <div>\n            <Badge pill variant=\"secondary\">\n              {status}\n            </Badge>\n            <Badge pill variant=\"info\">\n              {species}\n            </Badge>\n            <Badge pill variant=\"success\">\n              {gender}\n            </Badge>\n          </div>\n        </Card.Body>\n      </Styled.Card>\n    </>\n  );\n};\n\nexport default CharacterCard;\n","import React from 'react';\nimport CharacterCard from '../CharacterCard';\n\nconst CharacterList = ({ data, currentPage }) =>\n  data.results.map(({ name, status, species, gender, image, id }) => (\n    <CharacterCard\n      key={id}\n      id={id}\n      name={name}\n      imgUrl={image}\n      status={status}\n      species={species}\n      gender={gender}\n      currentPage={currentPage}\n    />\n  ));\n\nexport default CharacterList;\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  width: 100%;\n  margin-top: 10px;\n`;\n","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport { getCharacterUrl } from '../../helpers/getUrl';\nimport useFetch from '../../hooks/useFetch';\nimport CharacterList from '../CharacterList';\nimport { Wrapper } from './RecommendedCharacters.styles';\n\nconst RecommendedCharacters = ({ species }) => {\n  const url = getCharacterUrl({ species });\n  const { data, error, loading } = useFetch(url);\n\n  if (error) {\n    return <>Error</>;\n  }\n\n  if (loading || !data) {\n    return (\n      <Wrapper>\n        <Spinner animation=\"border\" variant=\"info\" />{' '}\n      </Wrapper>\n    );\n  }\n\n  return (\n    <Wrapper>\n      <CharacterList data={data} currentPage={1} />\n    </Wrapper>\n  );\n};\n\nexport default RecommendedCharacters;\n","import styled from 'styled-components';\n\nexport const LinkHolder = styled.div`\n  display: inline-block;\n  margin: 20px;\n`;\n\nexport const Header = styled.h2`\n  margin-top: 50px;\n`;\n","import React from 'react';\nimport { Col, Row, Spinner } from 'react-bootstrap';\nimport { useLocation, useParams } from 'react-router-dom';\nimport CharacterDetails from '../../components/CharacterDetails';\nimport Episodes from '../../components/Episodes';\nimport RecommendedCharacters from '../../components/RecommendedCharacters';\nimport Link from '../../components/UI/Link';\nimport { getEpisodeIds } from '../../helpers/getEpisodeIds';\nimport { getCharacterUrl } from '../../helpers/getUrl';\nimport useFetch from '../../hooks/useFetch';\nimport * as Styled from './CharacterProfile.styles';\n\nconst CharacterProfile = () => {\n  const { id } = useParams();\n  const url = getCharacterUrl(+id);\n  const {\n    state: { currentPage }\n  } = useLocation();\n  const { data, loading } = useFetch(url);\n\n  if (loading || !data) {\n    return <Spinner animation=\"border\" variant=\"info\" />;\n  }\n\n  const episodeIds = getEpisodeIds(data.episode);\n\n  return (\n    <>\n      <Styled.LinkHolder>\n        <Link\n          to={{\n            pathname: '/character',\n            search: `?page=${currentPage}`\n          }}>\n          Back\n        </Link>\n      </Styled.LinkHolder>\n      <Row>\n        <Col sm={4}>\n          <CharacterDetails data={data} />\n        </Col>\n        <Col sm={8}>\n          <Episodes ids={episodeIds} />\n        </Col>\n      </Row>\n      <Styled.Header>Recommended for you</Styled.Header>\n      <Row>\n        <RecommendedCharacters species={data.species} />\n      </Row>\n    </>\n  );\n};\n\nexport default CharacterProfile;\n","export const getEpisodeIds = episodes => {\n  const arrIds = episodes.map(episode => episode.split('/').slice(-1));\n  return arrIds.join(',');\n};\n","import { Button as BootstrapButton } from 'react-bootstrap';\nimport styled from 'styled-components';\n\nexport const Button = styled(BootstrapButton)`\n  margin-left: 12px;\n`;\n","import React from 'react';\nimport Link from '../UI/Link';\nimport * as Styled from './Pagination.styles';\n\nconst Pagination = ({ currentPage, totalPages }) => {\n  return (\n    <>\n      {currentPage > 1 && (\n        <Link\n          to={{\n            pathname: `/character`,\n            search: `?page=${+currentPage - 1}`\n          }}\n        >\n          <Styled.Button variant=\"info\">Prev </Styled.Button>\n        </Link>\n      )}\n\n      {currentPage < totalPages && (\n        <Link\n          to={{\n            pathname: `/character`,\n            search: `?page=${+currentPage + 1}`\n          }}\n        >\n          <Styled.Button variant=\"info\">Next </Styled.Button>\n        </Link>\n      )}\n    </>\n  );\n};\n\nexport default React.memo(Pagination);\n","import styled from 'styled-components';\n\nexport const Search = styled.div`\n  display: flex;\n  width: 80%;\n  margin: 0 auto;\n  margin-top: 30px;\n`;\n\nexport const ButtonHolder = styled.div`\n  margin-left: 12px;\n`;\n","import React from 'react';\nimport { Button, Form } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport * as Styled from './Search.styles';\n\nconst Search = ({ searchText, setSearchText }) => {\n  let history = useHistory();\n\n  const onChangeSearch = React.useCallback(\n    e => {\n      history.push(`/character`);\n      setSearchText(e.target.value);\n    },\n    [history, setSearchText]\n  );\n\n  const onReset = () => {\n    setSearchText('');\n  };\n\n  return (\n    <>\n      <Styled.Search>\n        <Form.Control\n          value={searchText}\n          data-testid=\"search\"\n          onChange={onChangeSearch}\n          type=\"text\"\n          placeholder=\"Search here\"\n        />\n        <Styled.ButtonHolder>\n          <Button data-testid=\"btnReset\" variant=\"danger\" onClick={onReset}>\n            Clear\n          </Button>\n        </Styled.ButtonHolder>\n      </Styled.Search>\n    </>\n  );\n};\n\nexport default React.memo(Search);\n","import { useLocation } from 'react-router-dom';\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nexport default useQuery;\n","import styled from 'styled-components';\r\n\r\nexport const Wrapper = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Paging = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  width: 91%;\r\n  margin: 0 auto;\r\n  margin-top: 30px;\r\n\r\n  @media (max-width: 740px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const Span = styled.span`\r\n  @media (max-width: 740px) {\r\n    margin-bottom: 10px;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from 'react';\nimport { Spinner } from 'react-bootstrap';\nimport CharacterList from '../../components/CharacterList';\nimport Pagination from '../../components/Pagination';\nimport Search from '../../components/Search';\nimport { getCharacterUrl } from '../../helpers/getUrl';\nimport useFetch from '../../hooks/useFetch';\nimport useQuery from '../../hooks/useQuery';\nimport * as Styled from './Characters.styles';\n\nlet totalCharacters = 0;\nlet totalPages = 0;\n\nconst Characters = () => {\n  const [searchText, setSearchText] = useState('');\n  const query = useQuery();\n  const currentPage = query.get('page') || 1;\n\n  const url = getCharacterUrl({ page: currentPage, name: searchText });\n  const { data, loading } = useFetch(url);\n\n  useEffect(() => {\n    if (data) {\n      const { count, pages } = data.info;\n      totalCharacters = count;\n      totalPages = pages;\n    }\n  }, [data]);\n\n  return (\n    <>\n      <Search searchText={searchText} setSearchText={setSearchText} />\n      <Styled.Paging>\n        <Styled.Span>Total Characters found: {totalCharacters}</Styled.Span>\n        <div>\n          <span>\n            Current page: {currentPage} of {totalPages}\n          </span>\n          <Pagination currentPage={currentPage} totalPages={totalPages} />\n        </div>\n      </Styled.Paging>\n\n      <Styled.Wrapper>\n        {loading && <Spinner animation=\"border\" variant=\"info\" />}\n        {data && <CharacterList data={data} currentPage={currentPage} />}\n      </Styled.Wrapper>\n    </>\n  );\n};\n\nexport default Characters;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport {\n  BrowserRouter as Router,\n  Redirect,\n  Route,\n  Switch\n} from 'react-router-dom';\nimport Layout from './components/Layout';\nimport ScrollToTop from './components/ScrollToTop';\nimport CharacterProfile from './routes/CharacterProfile';\nimport Characters from './routes/Characters';\n\nfunction App() {\n  return (\n    <Layout>\n      <Router>\n        <ScrollToTop />\n        <Switch>\n          <Route exact path=\"/character\" component={Characters} />\n          <Route exact path=\"/profile/:id\" component={CharacterProfile} />\n          <Route exact path=\"/\" component={Characters} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </Router>\n    </Layout>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}