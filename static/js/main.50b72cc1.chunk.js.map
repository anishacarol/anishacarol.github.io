{"version":3,"sources":["components/Error/Error.styles.js","components/Error/Error.js","helper/getCustomFieldByKey.js","components/UI/Icon/Svgs/Contract.js","components/UI/Icon/Svgs/Location.js","components/UI/Icon/Icon.js","components/UI/Link/Link.js","components/JobDetails/JobDetails.styles.js","components/JobDetails/JobDetails.js","components/Spinner/Spinner.styles.js","components/Spinner/Spinner.js","helper/getUrl.js","hooks/useFetch.js","pages/JobDetailsPage/JobDetailsPage.js","components/JobCard/JobCard.styles.js","components/JobCard/JobCard.js","components/UI/Dropdown/Dropdown.styles.js","components/UI/Dropdown/Dropdown.js","pages/JobListPage/JobListPage.styles.js","pages/JobListPage/JobListPage.js","helper/getFilterJobList.js","helper/getFormattedJobList.js","App.styles.js","App.js","serviceWorker.js","index.js"],"names":["Error","styled","h4","data-testid","getCustomFieldByKey","fieldArr","fieldId","find","item","valueLabel","Contract","xmlns","width","height","viewBox","fill","fillRule","stroke","strokeWidth","fillOpacity","transform","d","Location","version","xmlSpace","clipRule","Icon","name","Svgs","ALink","Link","JobDetails","div","Company","span","JobTitle","Information","LinkHolder","Detail","data","city","location","customField","label","typeOfEmployment","companyName","company","jobAd","sections","jobDescription","title","text","qualifications","qualificationTitle","qualificationText","to","dangerouslySetInnerHTML","__html","Loader","Spinner","className","baseUrl","getUrl","id","list","details","useFetch","url","options","useState","setData","error","setError","loading","setLoading","useEffect","a","axios","get","res","fetchData","JobDetailsPage","useParams","JobCard","JobInfo","position","country","Select","select","Option","option","Dropdown","arr","onChangeHandler","defaultText","onChange","value","map","key","FilterWrapper","Filters","FiltersResultCount","JobListPage","jobList","setJobList","filter","useRef","jobListData","e","target","current","query","result","joblist","undefined","includes","countries","departments","department","employmentType","Object","values","getJobListData","content","jobListElements","index","length","App","Header","header","path","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.50b72cc1.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nexport const Error = styled.h4`\n  color: red;\n`;\n","import React from \"react\";\nimport * as Styled from \"./Error.styles\";\n\nconst Error = () => (\n  <Styled.Error data-testid=\"error\">\n    Something went wrong. Please try again!\n  </Styled.Error>\n);\n\nexport default Error;\n","export const getCustomFieldByKey = (fieldArr, fieldId) => {\n  return fieldArr.find(item => item.fieldId === fieldId).valueLabel;\n};\n","import React from \"react\";\n\nconst Contract = () => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"20\"\n      height=\"20\"\n      viewBox=\"0 0 20 20\"\n    >\n      <g fill=\"none\" fillRule=\"evenodd\" stroke=\"none\" strokeWidth=\"1\">\n        <g fill=\"#000\" fillOpacity=\"0.9\" transform=\"translate(-44)\">\n          <g transform=\"translate(44)\">\n            <path d=\"M10 0C4.5 0 0 4.5 0 10s4.5 10 10 10 10-4.5 10-10S15.5 0 10 0zm0 18c-4.4 0-8-3.6-8-8s3.6-8 8-8 8 3.6 8 8-3.6 8-8 8zm.5-13H9v6l5.2 3.2.8-1.3-4.5-2.7V5z\"></path>\n          </g>\n        </g>\n      </g>\n    </svg>\n  );\n};\n\nexport default Contract;\n","import React from \"react\";\n\nconst Location = () => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"20\"\n    height=\"20\"\n    version=\"1.1\"\n    viewBox=\"0 0 32 32\"\n    xmlSpace=\"preserve\"\n  >\n    <g fill=\"#333\" fillRule=\"evenodd\" clipRule=\"evenodd\">\n      <path d=\"M16.002 17.746c3.309 0 6-2.692 6-6s-2.691-6-6-6-6 2.691-6 6 2.691 6 6 6zm0-11c2.758 0 5 2.242 5 5s-2.242 5-5 5-5-2.242-5-5 2.242-5 5-5z\"></path>\n      <path d=\"M16 0C9.382 0 4 5.316 4 12.001c0 7 6.001 14.161 10.376 19.194.016.02.718.805 1.586.805h.077c.867 0 1.57-.785 1.586-.805 4.377-5.033 10.377-12.193 10.377-19.194A11.971 11.971 0 0016 0zm.117 29.883c-.021.02-.082.064-.135.098-.01-.027-.084-.086-.129-.133C12.188 25.631 6 18.514 6 12.001 6 6.487 10.487 2 16 2c5.516 0 10.002 4.487 10.002 10.002 0 6.512-6.188 13.629-9.885 17.881z\"></path>\n    </g>\n  </svg>\n);\n\nexport default Location;\n","import React from \"react\";\nimport * as Svgs from \"./Svgs\";\n\nconst Icon = ({ name }) => {\n  const Icon = Svgs[name];\n\n  return <Icon />;\n};\n\nexport default Icon;\n","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const ALink = styled(Link)`\n  background-color: rgb(41, 189, 186);\n  color: rgb(255, 255, 255);\n  cursor: pointer;\n  border-width: initial;\n  border-color: initial;\n  outline: none;\n  font: inherit inherit inherit inherit inherit inherit inherit inherit inherit;\n  padding: 12px 30px;\n  text-decoration: none;\n  font-weight: 600;\n\n  &:hover {\n    background-color: rgb(0, 64, 85);\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const JobDetails = styled.div`\n  min-height: 90px;\n  background: #fff;\n  padding: 30px 50px;\n  display: flex;\n  flex-direction: column;\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 8px 24px;\n`;\n\nexport const Company = styled.span`\n  display: block;\n  color: rgb(155, 155, 155);\n  margin-bottom: 14px;\n  font-size: 1.4rem;\n`;\n\nexport const JobTitle = styled.span`\n  display: block;\n  color: rgb(28, 28, 28);\n  color: rgb(28, 28, 28);\n  font-weight: 600;\n  margin-bottom: 20px;\n  font-size: 1.6rem;\n`;\n\nexport const Information = styled.div`\n  display: flex;\n  @media (max-width: 768px) {\n    flex-direction: column;\n    span {\n      margin-bottom: 30px;\n    }\n  }\n  span {\n    font-size: 1rem;\n    font-weight: 400;\n    display: flex;\n    align-items: center;\n    margin-right: 30px;\n    svg {\n      margin-right: 10px;\n    }\n  }\n`;\n\nexport const LinkHolder = styled.div`\n  align-self: flex-end;\n  @media (max-width: 768px) {\n    align-self: flex-start;\n    margin-bottom: 30px;\n  }\n`;\n\nexport const Detail = styled.div`\n  margin-top: 40px;\n  font-size: 0.9rem;\n  color: #353535;\n  line-height: 30px;\n`;\n","import React from \"react\";\nimport { getCustomFieldByKey } from \"../../helper/getCustomFieldByKey\";\nimport Icon from \"../UI/Icon/Icon\";\nimport { ALink as Link } from \"./../UI/Link/Link\";\nimport * as Styled from \"./JobDetails.styles\";\n\nconst JobDetails = ({\n  data: {\n    name,\n    location: { city },\n    customField,\n    typeOfEmployment: { label },\n    company: { name: companyName },\n    jobAd: {\n      sections: {\n        jobDescription: { title, text },\n        qualifications: { title: qualificationTitle, text: qualificationText }\n      }\n    }\n  }\n}) => {\n  return (\n    <Styled.JobDetails>\n      <Styled.LinkHolder>\n        <Link to=\"/job-list\">{`< Back to list`}</Link>\n      </Styled.LinkHolder>\n      <Styled.Company>{companyName}</Styled.Company>\n      <Styled.JobTitle>{name}</Styled.JobTitle>\n      <Styled.Information>\n        <span>\n          <Icon name=\"Location\" />\n          {`${city} , ${getCustomFieldByKey(customField, \"COUNTRY\")}`}\n        </span>\n        <span>\n          <Icon name=\"Contract\" />\n          {label}\n        </span>\n      </Styled.Information>\n      <Styled.Detail\n        dangerouslySetInnerHTML={{\n          __html: `${title} ${text} ${qualificationTitle} ${qualificationText}`\n        }}\n      ></Styled.Detail>\n    </Styled.JobDetails>\n  );\n};\n\nexport default JobDetails;\n","import styled from \"styled-components\";\n\nexport const Loader = styled.div`\n  .loader,\n  .loader:before,\n  .loader:after {\n    border-radius: 50%;\n  }\n  .loader {\n    color: #75a3b5;\n    font-size: 11px;\n    text-indent: -99999em;\n    margin: 55px auto;\n    position: relative;\n    width: 10em;\n    height: 10em;\n    box-shadow: inset 0 0 0 1em;\n    -webkit-transform: translateZ(0);\n    -ms-transform: translateZ(0);\n    transform: translateZ(0);\n  }\n  .loader:before,\n  .loader:after {\n    position: absolute;\n    content: \"\";\n  }\n  .loader:before {\n    width: 5.2em;\n    height: 10.2em;\n    background: #f0f2f8;\n    border-radius: 10.2em 0 0 10.2em;\n    top: -0.1em;\n    left: -0.1em;\n    -webkit-transform-origin: 5.2em 5.1em;\n    transform-origin: 5.2em 5.1em;\n    -webkit-animation: load2 2s infinite ease 1.5s;\n    animation: load2 2s infinite ease 1.5s;\n  }\n  .loader:after {\n    width: 5.2em;\n    height: 10.2em;\n    background: #f0f2f8;\n    border-radius: 0 10.2em 10.2em 0;\n    top: -0.1em;\n    left: 5.1em;\n    -webkit-transform-origin: 0px 5.1em;\n    transform-origin: 0px 5.1em;\n    -webkit-animation: load2 2s infinite ease;\n    animation: load2 2s infinite ease;\n  }\n  @-webkit-keyframes load2 {\n    0% {\n      -webkit-transform: rotate(0deg);\n      transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n  @keyframes load2 {\n    0% {\n      -webkit-transform: rotate(0deg);\n      transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  }\n`;\n","import React from \"react\";\nimport * as Styled from \"./Spinner.styles\";\n\nconst Spinner = () => (\n  <Styled.Loader>\n    <div className=\"loader\"></div>\n  </Styled.Loader>\n);\n\nexport default Spinner;\n","const baseUrl =\n  \"https://api.smartrecruiters.com/v1/companies/smartrecruiters/postings\";\n\nconst getUrl = id => ({\n  list: baseUrl,\n  details: `${baseUrl}/${id}`\n});\n\nexport default getUrl;\n","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\n\nconst useFetch = (url, options) => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n\n      try {\n        const res = await axios.get(url);\n\n        setData(res.data);\n        setLoading(false);\n      } catch (error) {\n        setError(error);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [url]);\n\n  return { data, error, loading };\n};\n\nexport default useFetch;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport Error from \"../../components/Error/Error\";\nimport JobDetails from \"../../components/JobDetails/JobDetails\";\nimport Spinner from \"../../components/Spinner/Spinner\";\nimport getUrl from \"../../helper/getUrl\";\nimport useFetch from \"../../hooks/useFetch\";\n\nconst JobDetailsPage = () => {\n  let { id } = useParams();\n  const { loading, error, data } = useFetch(getUrl(id).details);\n\n  if (error) {\n    return <Error />;\n  }\n\n  if (loading || !data) {\n    return <Spinner />;\n  }\n\n  return <JobDetails data={data} />;\n};\n\nexport default JobDetailsPage;\n","import styled from \"styled-components\";\n\nexport const JobCard = styled.div`\n  min-height: 90px;\n  background: #fff;\n  padding: 15px 50px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  margin-top: 15px;\n\n  &:hover {\n    box-shadow: rgba(0, 0, 0, 0.2) 0px 8px 24px;\n  }\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nexport const Company = styled.span`\n  display: block;\n  color: rgb(155, 155, 155);\n  margin-bottom: 14px;\n`;\n\nexport const JobTitle = styled.span`\n  display: block;\n  color: rgb(28, 28, 28);\n  font-weight: 600;\n  margin-bottom: 16px;\n  font-size: 18px;\n`;\n\nexport const JobInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Information = styled.div`\n  display: flex;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n\n    span {\n      margin-bottom: 18px;\n    }\n  }\n\n  span {\n    font-size: 14px;\n    font-weight: 400;\n    display: flex;\n    align-items: center;\n    margin-right: 30px;\n\n    svg {\n      margin-right: 10px;\n    }\n  }\n`;\n\nexport const LinkHolder = styled.div`\n  align-self: center;\n  margin-top: 50px;\n\n  @media (max-width: 768px) {\n    display: flex;\n    width: 100%;\n    margin-top: 0;\n    text-align: center;\n\n    a {\n      width: 100%;\n    }\n  }\n`;\n","import React from \"react\";\nimport Icon from \"../UI/Icon/Icon\";\nimport { ALink as Link } from \"./../UI/Link/Link\";\nimport * as Styled from \"./JobCard.styles\";\n\nconst JobCard = ({\n  companyName,\n  position,\n  id,\n  city,\n  country,\n  typeOfEmployment\n}) => {\n  return (\n    <Styled.JobCard>\n      <Styled.JobInfo>\n        <Styled.Company>{companyName}</Styled.Company>\n        <Styled.JobTitle>{position}</Styled.JobTitle>\n        <Styled.Information>\n          <span>\n            <Icon name=\"Location\" />\n            {`${city} , ${country}`}\n          </span>\n          <span>\n            <Icon name=\"Contract\" />\n            {typeOfEmployment}\n          </span>\n        </Styled.Information>\n      </Styled.JobInfo>\n      <Styled.LinkHolder>\n        <Link to={`job-details/${id}`}>Read more ></Link>\n      </Styled.LinkHolder>\n    </Styled.JobCard>\n  );\n};\n\nexport default JobCard;\n","import styled from \"styled-components\";\n\nexport const Select = styled.select`\n  margin-top: 12px;\n  display: block;\n  font-size: 15px;\n  font-family: sans-serif;\n  font-weight: 500;\n  color: black;\n  line-height: 1.5;\n  padding: 0.5em 1.2em 0.4em 0.6em;\n  width: 150px;\n  max-width: 100%;\n  box-sizing: border-box;\n  margin: 0;\n  border: 2px solid #fff;\n  box-shadow: 0 1px 0 1px rgba(0, 0, 0, 0.04);\n  border-radius: 0;\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  background-color: rgb(255, 255, 255);\n  background-image: url(data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20fill%3D%22%23007CB2%22%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13-5.4H18.4c-5%200-9.3%201.8-12.9%205.4A17.6%2017.6%200%200%200%200%2082.2c0%205%201.8%209.3%205.4%2012.9l128%20127.9c3.6%203.6%207.8%205.4%2012.8%205.4s9.2-1.8%2012.8-5.4L287%2095c3.5-3.5%205.4-7.8%205.4-12.8%200-5-1.9-9.2-5.5-12.8z%22%2F%3E%3C%2Fsvg%3E);\n  background-repeat: no-repeat, repeat;\n  background-position: right 0.7em top 50%, 0 0;\n  background-size: 0.65em auto, 100%;\n  outline: none;\n  margin-right: 11px;\n\n  &:hover {\n    border-color: #888;\n  }\n\n  &:focus {\n    outline: none;\n  }\n\n  @media (max-width: 768px) {\n    width: 90%;\n    margin-top: 15px;\n  }\n`;\n\nexport const Option = styled.option`\n  font-weight: normal;\n`;\n","import React from \"react\";\nimport * as Styled from \"./Dropdown.styles\";\n\nconst Dropdown = ({ arr, onChangeHandler, name, defaultText }) => {\n  return (\n    <Styled.Select name={name} onChange={onChangeHandler}>\n      <Styled.Option value=\"all\">{defaultText}</Styled.Option>\n      {arr.map(item => (\n        <Styled.Option key={item} value={item}>\n          {item}\n        </Styled.Option>\n      ))}\n    </Styled.Select>\n  );\n};\n\nexport default Dropdown;\n","import styled from \"styled-components\";\n\nexport const FilterWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-left: 30px;\n  margin-bottom: 30px;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n    margin-bottom: 0;\n  }\n`;\n\nexport const Filters = styled.div`\n  display: flex;\n  justify-content: space-between;\n\n  label {\n    align-self: center;\n    margin-right: 15px;\n  }\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nexport const FiltersResultCount = styled.div`\n  align-self: center;\n  margin-right: 30px;\n  font-size: 18px;\n\n  span {\n    font-weight: bold;\n  }\n\n  @media (max-width: 768px) {\n    margin-top: 30px;\n  }\n`;\n","import React, { useEffect, useRef, useState } from \"react\";\nimport Error from \"../../components/Error/Error\";\nimport JobCard from \"../../components/JobCard/JobCard\";\nimport Spinner from \"../../components/Spinner/Spinner\";\nimport Dropdown from \"../../components/UI/Dropdown/Dropdown\";\nimport { getFilterJobList } from \"../../helper/getFilterJobList\";\nimport { getJobListData } from \"../../helper/getFormattedJobList\";\nimport getUrl from \"../../helper/getUrl\";\nimport useFetch from \"../../hooks/useFetch\";\nimport * as Styled from \"./JobListPage.styles\";\n\nconst JobListPage = () => {\n  const [jobList, setJobList] = useState(null);\n  const { loading, error, data } = useFetch(getUrl().list);\n  const filter = useRef({});\n  const jobListData = useRef(null);\n\n  const onChangeHandler = e => {\n    const { name, value } = e.target;\n    if (value === \"all\") {\n      delete filter.current[name];\n    } else {\n      filter.current[name] = value;\n    }\n    const result = getFilterJobList(\n      jobListData.current.joblist,\n      filter.current\n    );\n    setJobList(result);\n  };\n\n  useEffect(() => {\n    if (data) {\n      jobListData.current = getJobListData(data.content);\n      data && setJobList(jobListData.current.joblist);\n    }\n  }, [data]);\n\n  if (error) {\n    return <Error />;\n  }\n\n  if (loading || !data || !jobList) {\n    return <Spinner />;\n  }\n\n  const jobListElements = jobList.map(\n    ({ id, companyName, position, country, city, employmentType }, index) => (\n      <JobCard\n        key={`${id}-${index}`}\n        companyName={companyName}\n        position={position}\n        id={id}\n        city={city}\n        country={country}\n        typeOfEmployment={employmentType}\n      />\n    )\n  );\n\n  return (\n    <>\n      <Styled.FilterWrapper>\n        <Styled.Filters>\n          <label>Filter By</label>\n          <Dropdown\n            name=\"country\"\n            arr={jobListData.current.countries}\n            onChangeHandler={onChangeHandler}\n            defaultText=\"All countries\"\n          />\n          <Dropdown\n            name=\"department\"\n            arr={jobListData.current.departments}\n            onChangeHandler={onChangeHandler}\n            defaultText=\"All departments\"\n          />\n        </Styled.Filters>\n        <Styled.FiltersResultCount>\n          <label>\n            Total jobs: <span>{jobList.length}</span>\n          </label>\n        </Styled.FiltersResultCount>\n      </Styled.FilterWrapper>\n      {jobList.length === 0 ? (\n        <h1>No Jobs available for the selected filters</h1>\n      ) : (\n        <>{jobListElements}</>\n      )}\n    </>\n  );\n};\n\nexport default JobListPage;\n","export const getFilterJobList = (arr, query) => {\n  const filteredData = arr.filter(item => {\n    for (let key in query) {\n      if (item[key] === undefined || !query[key].includes(item[key])) {\n        return false;\n      }\n    }\n    return true;\n  });\n  return filteredData;\n};\n","import { getCustomFieldByKey } from \"./getCustomFieldByKey\";\n\nexport const getJobListData = arr => {\n  const countries = {};\n  const departments = {};\n\n  const joblist = arr.map(item => {\n    const country = getCustomFieldByKey(item.customField, \"COUNTRY\");\n    countries[country] = country;\n    departments[item.department.label] = item.department.label;\n\n    return {\n      id: item.id,\n      position: item.name,\n      companyName: item.company.name,\n      country: country,\n      city: item.location.city,\n      department: item.department.label,\n      employmentType: item.typeOfEmployment.label\n    };\n  });\n\n  return {\n    joblist,\n    countries: Object.values(countries),\n    departments: Object.values(departments)\n  };\n};\n","import styled from \"styled-components\";\n\nexport const App = styled.div`\n  width: 900px;\n  margin: 0 auto;\n  margin-bottom: 50px;\n\n  @media (max-width: 768px) {\n    width: 98%;\n    margin: 0 1%;\n  }\n`;\nexport const Header = styled.header`\n  height: 120px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  h1 {\n    font-size: 40px;\n    color: rgb(41, 189, 186);\n  }\n`;\n","import React from \"react\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport JobDetailsPage from \"../src/pages/JobDetailsPage/JobDetailsPage\";\nimport JobListPage from \"../src/pages/JobListPage/JobListPage\";\nimport * as Styled from \"./App.styles\";\n\nfunction App() {\n  return (\n    <Styled.App>\n      <BrowserRouter>\n        <Styled.Header>\n          <h1>Job Portal</h1>\n        </Styled.Header>\n        <Switch>\n          <Route path=\"/job-list\">\n            <JobListPage />\n          </Route>\n          <Route path=\"/job-details/:id\">\n            <JobDetailsPage />\n          </Route>\n          <Route path=\"/\">\n            <JobListPage />\n          </Route>\n        </Switch>\n      </BrowserRouter>\n    </Styled.App>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}